{
	"name": "Vnxt_Report_Scorecard",
	"properties": {
		"activities": [
			{
				"name": "Drop Table",
				"type": "Script",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "vnxt_reporting",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "IF EXISTS(Select * from sysobjects where name = 'TempReport' and type = 'U')\nBEGIN\nEXEC dbo.CreateBackup 'dbo','TempReport'\ntruncate TABLE dbo.TempReport\nEND\n\n\nIF EXISTS (Select 1 from sysobjects where name = 'SubsidiaryDetails' and type = 'U')\nDROP TABLE [dbo].[SubsidiaryDetails]\n\n\nSelect Distinct SubsidiaryId, SubsidiaryName, AreaName, RegionName, SubRegionName into dbo.SubsidiaryDetails from [vnxt_Catalogues].[reporting].[vw_Mst_Subsidiary]  where 1=1 order by SubsidiaryId\n\nTRUNCATE TABLE [dbo].[MAL_AccountNumber]\n\nTRUNCATE TABLE [dbo].[MPL_AccountNumber]\n\n"
						}
					]
				}
			},
			{
				"name": "Copy data1",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Drop Table",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "dbo.Scorecard"
					},
					{
						"name": "Destination",
						"value": "dbo.TempReport"
					}
				],
				"typeProperties": {
					"source": {
						"type": "SqlMISource",
						"sqlReaderStoredProcedureName": "[dbo].[SP_TempReport]",
						"partitionOption": "None"
					},
					"sink": {
						"type": "SqlMISink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "GRSListid",
									"type": "Int16",
									"physicalType": "smallint"
								},
								"sink": {
									"name": "GRSListid",
									"type": "Int16",
									"physicalType": "smallint"
								}
							},
							{
								"source": {
									"name": "GRSBucket",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "GRSBucket",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "AreaName",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "AreaName",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "RegionName",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "RegionName",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "SubRegionName",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "SubRegionName",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "SubsidiaryName",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "SubsidiaryName",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "TotalCount",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "TotalCount",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "ContactsSameSegmentFromLastWave",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "ContactsSameSegmentFromLastWave",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "Perc_ContactsSameSegmentFromLastWave",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 6
								},
								"sink": {
									"name": "Perc_ContactsSameSegmentFromLastWave",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 6
								}
							},
							{
								"source": {
									"name": "ContactsDifferentSegmentFromLastWave",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "ContactsDifferentSegmentFromLastWave",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "Perc_ContactsDifferentSegmentFromLastWave",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 5
								},
								"sink": {
									"name": "Perc_ContactsDifferentSegmentFromLastWave",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 5
								}
							},
							{
								"source": {
									"name": "NewContactInThisWave",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "NewContactInThisWave",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "Perc_NewContactInThisWave",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 7
								},
								"sink": {
									"name": "Perc_NewContactInThisWave",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 7
								}
							},
							{
								"source": {
									"name": "PreviousWaveSampleCount",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "PreviousWaveSampleCount",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "PreviousWaveFixableRejectionCount",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "PreviousWaveFixableRejectionCount",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "DifferenceFromPreviousWave",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "DifferenceFromPreviousWave",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "Perc_DifferenceFromPreviousWave",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 7
								},
								"sink": {
									"name": "Perc_DifferenceFromPreviousWave",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 7
								}
							},
							{
								"source": {
									"name": "NewContactsinCurrentWave",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "NewContactsinCurrentWave",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "Perc_NewContactsinCurrentWave",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 5
								},
								"sink": {
									"name": "Perc_NewContactsinCurrentWave",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 5
								}
							},
							{
								"source": {
									"name": "ManagedContactsFromLastWave",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "ManagedContactsFromLastWave",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "ManagedContactsDifferenceFromLastWave",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "ManagedContactsDifferenceFromLastWave",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "Perc_ManagedContactsDifferenceFromLastWave",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 6
								},
								"sink": {
									"name": "Perc_ManagedContactsDifferenceFromLastWave",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 6
								}
							},
							{
								"source": {
									"name": "ManagedContactCRMKey",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "ManagedContactCRMKey",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "Perc_ManagedContactCRMKey",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 5
								},
								"sink": {
									"name": "Perc_ManagedContactCRMKey",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 5
								}
							},
							{
								"source": {
									"name": "ManagedContactMPOR",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "ManagedContactMPOR",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "Perc_ManagedContactMPOR",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 5
								},
								"sink": {
									"name": "Perc_ManagedContactMPOR",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 5
								}
							},
							{
								"source": {
									"name": "IntendedCompletes",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "IntendedCompletes",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "IsManagedSegment",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "IsManagedSegment",
									"type": "Boolean",
									"physicalType": "bit"
								}
							},
							{
								"source": {
									"name": "SampleCount",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "SampleCount",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "RejectionCount",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "RejectionCount",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "FixableRejectionCount",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "FixableRejectionCount",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "NonFixableRejectionCount",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "NonFixableRejectionCount",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "ManagedSampleCount",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "ManagedSampleCount",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "NonManagedSampleCount",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "NonManagedSampleCount",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "ManagedContact",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "ManagedContact",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "Perc_ManagedContact",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 5
								},
								"sink": {
									"name": "Perc_ManagedContact",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 5
								}
							},
							{
								"source": {
									"name": "NonManagedContact",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "NonManagedContact",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "ManagedAccount",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "ManagedAccount",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "NonManagedAccount",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "NonManagedAccount",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "Accountnumber",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "Accountnumber",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "PartnerAccountNumber",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "PartnerAccountNumber",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "ParentAccountNumber",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "ParentAccountNumber",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "MissingAccountNumber",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "MissingAccountNumber",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "TotalAccountNumber",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "TotalAccountNumber",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "AccountsManagedContact_1",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "AccountsManagedContact_1",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "AccountsManagedContact_2",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "AccountsManagedContact_2",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "AccountsManagedContact_3",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "AccountsManagedContact_3",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "AccountsNonManagedContact_1",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "AccountsNonManagedContact_1",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "AccountsNonManagedContact_2",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "AccountsNonManagedContact_2",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "AccountsNonManagedContact_3",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "AccountsNonManagedContact_3",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "Perc_AccountsManagedContact_1",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 5
								},
								"sink": {
									"name": "Perc_AccountsManagedContact_1",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 5
								}
							},
							{
								"source": {
									"name": "Perc_AccountsManagedContact_2",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 5
								},
								"sink": {
									"name": "Perc_AccountsManagedContact_2",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 5
								}
							},
							{
								"source": {
									"name": "Perc_AccountsManagedContact_3",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 5
								},
								"sink": {
									"name": "Perc_AccountsManagedContact_3",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 5
								}
							},
							{
								"source": {
									"name": "Perc_AccountsNonManagedContact_1",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 5
								},
								"sink": {
									"name": "Perc_AccountsNonManagedContact_1",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 5
								}
							},
							{
								"source": {
									"name": "Perc_AccountsNonManagedContact_2",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 5
								},
								"sink": {
									"name": "Perc_AccountsNonManagedContact_2",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 5
								}
							},
							{
								"source": {
									"name": "Perc_AccountsNonManagedContact_3",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 5
								},
								"sink": {
									"name": "Perc_AccountsNonManagedContact_3",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 5
								}
							},
							{
								"source": {
									"name": "ManagedContactMLAccountCoverage",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 5
								},
								"sink": {
									"name": "ManagedContactMLAccountCoverage",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 5
								}
							},
							{
								"source": {
									"name": "DataQuality",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 5
								},
								"sink": {
									"name": "DataQuality",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 5
								}
							},
							{
								"source": {
									"name": "DataQualityManagedContact",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 5
								},
								"sink": {
									"name": "DataQualityManagedContact",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 5
								}
							},
							{
								"source": {
									"name": "ChangeDataQualityInThisWave",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 5
								},
								"sink": {
									"name": "ChangeDataQualityInThisWave",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 5
								}
							},
							{
								"source": {
									"name": "ChangeDataQualityFromLastWave",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 5
								},
								"sink": {
									"name": "ChangeDataQualityFromLastWave",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 5
								}
							},
							{
								"source": {
									"name": "Perc_ContactRecency_NoOld",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 5
								},
								"sink": {
									"name": "Perc_ContactRecency_NoOld",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 5
								}
							},
							{
								"source": {
									"name": "QualifiedSampleFromLastWave",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 5
								},
								"sink": {
									"name": "QualifiedSampleFromLastWave",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 5
								}
							},
							{
								"source": {
									"name": "DNCLocalSuppression",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "DNCLocalSuppression",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "DNCPriorWaveHardBounceBack",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "DNCPriorWaveHardBounceBack",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "OtherSurveySuppression",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "OtherSurveySuppression",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "DNCMDMHardSuppress",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "DNCMDMHardSuppress",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "OtherNonFixable",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "OtherNonFixable",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "GlobalCompanySuppression",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "GlobalCompanySuppression",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "DeDupeinSameBucket",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "DeDupeinSameBucket",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "OtherFixable",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "OtherFixable",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "MissingNameCompanyFirstLast",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "MissingNameCompanyFirstLast",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "InvalidMissingEmail",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "InvalidMissingEmail",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "InvalidMissingFields",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "InvalidMissingFields",
									"type": "Int32",
									"physicalType": "int"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "Source_vnxt_Reporting",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Dest_vnxt_Reporting_TempReport",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Update TempReport",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Copy data1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "vnxt_reporting",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "Update dbo.TempReport\nSet GRSBucket = 'Customer - SMB MPAA'\nWhere GRSBucket = 'Customer -  SMB MPAA ITP'\n\n\nUpdate dbo.TempReport\nSet GRSBucket = 'Customer - SMB MPAA'\nWhere GRSBucket = 'Customer -  SMB MPAA BDM'\n\n\nUpdate S\nSet S.PartnerAccountNumber = M.AccountNumber\nFROM Scorecard S\nINNER JOIN [MAL_MPL].[dbo].[vw_vnxt_src_MPL] m with(nolock)\nON S.MPLID = M.MPLID\nWHERE M.MPLID is not NULL AND M.AccountNumber is not null\n\n\nUPDATE dbo.TempReport\nSET IsManagedSegment = 1\n--Where GRSListId in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,33,34)\nWHERE GRSLISTID IN (3,4,8,10,11,14,15,16,17,18,22,23,24,25,26,35,36,37,38)\n\n\nUPDATE dbo.TempReport\nSET IsManagedSegment = 0\n--Where GRSListId not in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,33,34)\nWHERE GRSLISTID NOT IN (3,4,8,10,11,14,15,16,17,18,22,23,24,25,26,35,36,37,38)\nselect 1 abcd"
						}
					]
				}
			},
			{
				"name": "MAL MPL Count",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Update TempReport",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlMISource",
						"sqlReaderQuery": "select M.Subsidiary,P.GrslistId,Count(Distinct  Case WHEN ISNULL(m.AccountNumber,'') != '' THEN \nm.AccountNumber END) AS AccountNumber from MAL_MPL.[dbo].[vw_vnxt_src_MPL] m with(nolock)\nINNER JOIN [vnxt_Reporting].[dbo].[Partner_SegmentSubSegment] p with(nolock)\nON m.Segment = p.segment\nGROUp BY M.Subsidiary,P.GrslistId",
						"partitionOption": "None"
					},
					"sink": {
						"type": "SqlMISink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Subsidiary",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "Subsidiary",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "GrslistId",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "GrslistId",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "AccountNumber",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "AccountNumber",
									"type": "Int32",
									"physicalType": "int"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "Source_vnxt_Reporting",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Dest_vnxt_Reporting_MPL_AccountNumber",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Update Total Account Number",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "MAL MPL Count",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "vnxt_reporting",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "UPDATE s\nSET TotalAccountNumber = t.AccountNumber\nFROM dbo.TempReport s\nINNER JOIN [dbo].[MPL_AccountNumber] t WITH(NOLOCK)\nON t.subsidiary = s.subsidiaryName and t.grslistid = s.grslistid\n--WHERE s.GRSListId in (3,4,6,7,8,9,11,12,19,10,26)\nWHERE s.GRSListId IN (3,4,8,10,11,26,38)\n\n\nUPDATE s\nSET TotalAccountNumber = t.AccountNumber\nFROM dbo.TempReport s\nINNER JOIN [dbo].[MAL_AccountNumber] t WITH(NOLOCK)\nON t.subsidiary = s.subsidiaryName and t.grslistid = s.grslistid\n--WHERE s.GRSListId not in (3,4,6,7,8,9,11,12,19,10,26)\nWHERE s.GRSListId NOT IN (3,4,8,10,11,26,38)\n\n\nUPDATE dbo.TempReport\nSET MissingAccountNumber = TotalAccountNumber - ISNULL(PartnerAccountNumber,0)\nWHERE ISNULL(TotalAccountNumber,0) != 0 and grslistid IN (3,4,8,10,11,26,38)\n\n\nUPDATE dbo.TempReport\nSET MissingAccountNumber = TotalAccountNumber - ISNULL(ParentAccountNumber,0)\nWHERE ISNULL(TotalAccountNumber,0) != 0 and grslistid NOT IN (3,4,8,10,11,26,38)\n\n\nUPDATE dbo.TempReport\nSET MissingAccountNumber  = 0\nWHERE MissingAccountNumber < 0\n\nselect 1 abcd"
						}
					]
				}
			},
			{
				"name": "Update Customer Account Managed",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Update Total Account Number",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "vnxt_reporting",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "Select Distinct Q.GRSListid, Geo.SubsidiaryName ,Q.AccountNumber,SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) AS ManagedContact into #Temp1 from [vnxt_Reporting].[dbo].[Scorecard] Q with(nolock) \nINNER JOIN [vnxt_Reporting].[dbo].[SubsidiaryDetails] Geo with(nolock)\nON Q.Subsidiaryid = Geo.SubsidiaryId\nWHERE ISNULL(Q.RejectionCount,0) = 0\nGROUP BY Q.GRSListid, Geo.SubsidiaryName ,Q.AccountNumber\n\nSelect Distinct Q.GRSListid, Q.SubsidiaryName ,COUNT(Distinct Q.AccountNumber) AccountsManagedContact_1 into #Temp2 from #Temp1 Q with(nolock) \nWHERE Q.AccountNumber is not null and ManagedContact > 1\nGROUP BY Q.GRSListid, Q.SubsidiaryName\n\nUpdate P\nSet P.AccountsManagedContact_1 = Tem.AccountsManagedContact_1\nfrom vnxt_reporting..TempReport P with(nolock)\nINNER JOIN #Temp2 Tem with(nolock)\nON Tem.GRSlistid = P.Grslistid and Tem.Subsidiaryname = P.SubsidiaryName\n\nDROP TABLE #Temp1\nDROP TABLE #Temp2\n\nSelect Distinct Q.GRSListid, Geo.SubsidiaryName ,Q.AccountNumber,SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) AS ManagedContact into #Temp3 from [vnxt_Reporting].[dbo].[Scorecard] Q with(nolock) \nINNER JOIN [vnxt_Reporting].[dbo].[SubsidiaryDetails] Geo with(nolock)\nON Q.Subsidiaryid = Geo.SubsidiaryId\nWHERE ISNULL(Q.RejectionCount,0) = 0\nGROUP BY Q.GRSListid, Geo.SubsidiaryName ,Q.AccountNumber\n\nSelect Distinct Q.GRSListid, Q.SubsidiaryName ,COUNT(Distinct Q.AccountNumber) AccountsManagedContact_2 into #Temp4 from #Temp3 Q with(nolock) \nWHERE Q.AccountNumber is not null and ManagedContact > 2\nGROUP BY Q.GRSListid, Q.SubsidiaryName \n\nUpdate P\nSet P.AccountsManagedContact_2 = Tem.AccountsManagedContact_2\nfrom vnxt_reporting..TempReport P with(nolock)\nINNER JOIN #Temp4 Tem with(nolock)\nON Tem.GRSlistid = P.Grslistid and Tem.Subsidiaryname = P.SubsidiaryName\n\nDROP TABLE #Temp3\nDROP TABLE #Temp4\n\nSelect Distinct Q.GRSListid, Geo.SubsidiaryName ,Q.AccountNumber,SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) AS ManagedContact into #Temp5 from [vnxt_Reporting].[dbo].[Scorecard] Q with(nolock) \nINNER JOIN [vnxt_Reporting].[dbo].[SubsidiaryDetails] Geo with(nolock)\nON Q.Subsidiaryid = Geo.SubsidiaryId\nWHERE ISNULL(Q.RejectionCount,0) = 0\nGROUP BY Q.GRSListid, Geo.SubsidiaryName ,Q.AccountNumber\n\nSelect Distinct Q.GRSListid, Q.SubsidiaryName ,COUNT(Distinct Q.AccountNumber) AccountsManagedContact_3 into #Temp6 from #Temp5 Q with(nolock) \nWHERE Q.AccountNumber is not null and ManagedContact > 3\nGROUP BY Q.GRSListid, Q.SubsidiaryName\n\nUpdate P\nSet P.AccountsManagedContact_3 = Tem.AccountsManagedContact_3\nfrom vnxt_reporting..TempReport P with(nolock)\nINNER JOIN #Temp6 Tem with(nolock)\nON Tem.GRSlistid = P.Grslistid and Tem.Subsidiaryname = P.SubsidiaryName\n\nDROP TABLE #Temp5\nDROP TABLE #Temp6\n\nselect 1 abcd"
						}
					]
				}
			},
			{
				"name": "Update Customer Account NonManaged",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Update Customer Account Managed",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "vnxt_reporting",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "Select Distinct Q.GRSListid, Geo.SubsidiaryName ,Q.AccountNumber,SUM(Case WHEN ISNULL(Q.ManagedContact,0) = 0 THEN 1 ELSE 0 END) AS ManagedContact into #Temp1 from [vnxt_Reporting].[dbo].[Scorecard] Q with(nolock) \nINNER JOIN [vnxt_Reporting].[dbo].[SubsidiaryDetails] Geo with(nolock)\nON Q.Subsidiaryid = Geo.SubsidiaryId\nWHERE ISNULL(Q.RejectionCount,0) = 0\nGROUP BY Q.GRSListid, Geo.SubsidiaryName ,Q.AccountNumber\n\nSelect Distinct Q.GRSListid, Q.SubsidiaryName ,COUNT(Distinct Q.AccountNumber) AccountsNonManagedContact_1 into #Temp2 from #Temp1 Q with(nolock) \nWHERE Q.AccountNumber is not null and ManagedContact > 1\nGROUP BY Q.GRSListid, Q.SubsidiaryName\n\nUpdate P\nSet P.AccountsNonManagedContact_1 = Tem.AccountsNonManagedContact_1\nfrom vnxt_reporting..TempReport P with(nolock)\nINNER JOIN #Temp2 Tem with(nolock)\nON Tem.GRSlistid = P.Grslistid and Tem.Subsidiaryname = P.SubsidiaryName\n\nDROP TABLE #Temp1\nDROP TABLE #Temp2\n\nSelect Distinct Q.GRSListid, Geo.SubsidiaryName ,Q.AccountNumber,SUM(Case WHEN ISNULL(Q.ManagedContact,0) = 0 THEN 1 ELSE 0 END) AS ManagedContact into #Temp3 from [vnxt_Reporting].[dbo].[Scorecard] Q with(nolock) \nINNER JOIN [vnxt_Reporting].[dbo].[SubsidiaryDetails] Geo with(nolock)\nON Q.Subsidiaryid = Geo.SubsidiaryId\nWHERE ISNULL(Q.RejectionCount,0) = 0\nGROUP BY Q.GRSListid, Geo.SubsidiaryName ,Q.AccountNumber\n\nSelect Distinct Q.GRSListid, Q.SubsidiaryName ,COUNT(Distinct Q.AccountNumber) AccountsNonManagedContact_2 into #Temp4 from #Temp3 Q with(nolock) \nWHERE Q.AccountNumber is not null and ManagedContact > 2\nGROUP BY Q.GRSListid, Q.SubsidiaryName\n\nUpdate P\nSet P.AccountsNonManagedContact_2 = Tem.AccountsNonManagedContact_2\nfrom vnxt_reporting..TempReport P with(nolock)\nINNER JOIN #Temp4 Tem with(nolock)\nON Tem.GRSlistid = P.Grslistid and Tem.Subsidiaryname = P.SubsidiaryName\n\nDROP TABLE #Temp3\nDROP TABLE #Temp4\n\nSelect Distinct Q.GRSListid, Geo.SubsidiaryName ,Q.AccountNumber,SUM(Case WHEN ISNULL(Q.ManagedContact,0) = 0 THEN 1 ELSE 0 END) AS ManagedContact into #Temp5 from [vnxt_Reporting].[dbo].[Scorecard] Q with(nolock) \nINNER JOIN [vnxt_Reporting].[dbo].[SubsidiaryDetails] Geo with(nolock)\nON Q.Subsidiaryid = Geo.SubsidiaryId\nWHERE ISNULL(Q.RejectionCount,0) = 0\nGROUP BY Q.GRSListid, Geo.SubsidiaryName ,Q.AccountNumber\n\nSelect Distinct Q.GRSListid, Q.SubsidiaryName ,COUNT(Distinct Q.AccountNumber) AccountsNonManagedContact_3 into #Temp6 from #Temp5 Q with(nolock) \nWHERE Q.AccountNumber is not null and ManagedContact > 3\nGROUP BY Q.GRSListid, Q.SubsidiaryName\n\nUpdate P\nSet P.AccountsNonManagedContact_3 = Tem.AccountsNonManagedContact_3\nfrom vnxt_reporting..TempReport P with(nolock)\nINNER JOIN #Temp6 Tem with(nolock)\nON Tem.GRSlistid = P.Grslistid and Tem.Subsidiaryname = P.SubsidiaryName\n\nDROP TABLE #Temp5\nDROP TABLE #Temp6\n\nselect 1 abcd"
						}
					]
				}
			},
			{
				"name": "Update Partner Account Managed",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Update Customer Account NonManaged",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "vnxt_reporting",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "Select Distinct Q.GRSListid, Geo.SubsidiaryName ,Q.PartnerAccountNumber,SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) AS ManagedContact into #Temp1 from [vnxt_Reporting].[dbo].[Scorecard] Q with(nolock) \nINNER JOIN [vnxt_Reporting].[dbo].[SubsidiaryDetails] Geo with(nolock)\nON Q.Subsidiaryid = Geo.SubsidiaryId\nWHERE ISNULL(Q.RejectionCount,0) = 0\nGROUP BY Q.GRSListid, Geo.SubsidiaryName ,Q.PartnerAccountNumber\n\nSelect Distinct Q.GRSListid, Q.SubsidiaryName ,COUNT(Distinct Q.PartnerAccountNumber) AccountsManagedContact_1 into #Temp2 from #Temp1 Q with(nolock) \nWHERE Q.PartnerAccountNumber is not null and ManagedContact > 1\nGROUP BY Q.GRSListid, Q.SubsidiaryName\n\nUpdate P\nSet P.AccountsManagedContact_1 = Tem.AccountsManagedContact_1\nfrom vnxt_reporting..TempReport P with(nolock)\nINNER JOIN #Temp2 Tem with(nolock)\nON Tem.GRSlistid = P.Grslistid and Tem.Subsidiaryname = P.SubsidiaryName\n--WHERE p.grslistid in (3,4,6,7,8,9,11,12,19,10,26)\nWHERE p.grslistid IN (3,4,8,10,11,26,38)\n\nDROP TABLE #Temp1\nDROP TABLE #Temp2\n\nSelect Distinct Q.GRSListid, Geo.SubsidiaryName ,Q.PartnerAccountNumber,SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) AS ManagedContact into #Temp3 from [vnxt_Reporting].[dbo].[Scorecard] Q with(nolock) \nINNER JOIN [vnxt_Reporting].[dbo].[SubsidiaryDetails] Geo with(nolock)\nON Q.Subsidiaryid = Geo.SubsidiaryId\nWHERE ISNULL(Q.RejectionCount,0) = 0\nGROUP BY Q.GRSListid, Geo.SubsidiaryName ,Q.PartnerAccountNumber\n\nSelect Distinct Q.GRSListid, Q.SubsidiaryName ,COUNT(Distinct Q.PartnerAccountNumber) AccountsManagedContact_2 into #Temp4 from #Temp3 Q with(nolock) \nWHERE Q.PartnerAccountNumber is not null and ManagedContact > 2\nGROUP BY Q.GRSListid, Q.SubsidiaryName \n\nUpdate P\nSet P.AccountsManagedContact_2 = Tem.AccountsManagedContact_2\nfrom vnxt_reporting..TempReport P with(nolock)\nINNER JOIN #Temp4 Tem with(nolock)\nON Tem.GRSlistid = P.Grslistid and Tem.Subsidiaryname = P.SubsidiaryName\n--WHERE p.grslistid in (3,4,6,7,8,9,11,12,19,10,26)\nWHERE p.grslistid IN (3,4,8,10,11,26,38)\n\nDROP TABLE #Temp3\nDROP TABLE #Temp4\n\nSelect Distinct Q.GRSListid, Geo.SubsidiaryName ,Q.PartnerAccountNumber,SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) AS ManagedContact into #Temp5 from [vnxt_Reporting].[dbo].[Scorecard] Q with(nolock) \nINNER JOIN [vnxt_Reporting].[dbo].[SubsidiaryDetails] Geo with(nolock)\nON Q.Subsidiaryid = Geo.SubsidiaryId\nWHERE ISNULL(Q.RejectionCount,0) = 0\nGROUP BY Q.GRSListid, Geo.SubsidiaryName ,Q.PartnerAccountNumber\n\nSelect Distinct Q.GRSListid, Q.SubsidiaryName ,COUNT(Distinct Q.PartnerAccountNumber) AccountsManagedContact_3 into #Temp6 from #Temp5 Q with(nolock) \nWHERE Q.PartnerAccountNumber is not null and ManagedContact > 3\nGROUP BY Q.GRSListid, Q.SubsidiaryName\n\nUpdate P\nSet P.AccountsManagedContact_3 = Tem.AccountsManagedContact_3\nfrom vnxt_reporting..TempReport P with(nolock)\nINNER JOIN #Temp6 Tem with(nolock)\nON Tem.GRSlistid = P.Grslistid and Tem.Subsidiaryname = P.SubsidiaryName\n--WHERE p.grslistid in (3,4,6,7,8,9,11,12,19,10,26)\nWHERE p.grslistid IN (3,4,8,10,11,26,38)\n\nDROP TABLE #Temp5\nDROP TABLE #Temp6\n\nselect 1 abcd"
						}
					]
				}
			},
			{
				"name": "Update Partner Account NonManaged",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Update Partner Account Managed",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "vnxt_reporting",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "Select Distinct Q.GRSListid, Geo.SubsidiaryName ,Q.PartnerAccountNumber,SUM(Case WHEN ISNULL(Q.ManagedContact,0) = 0 THEN 1 ELSE 0 END) AS ManagedContact into #Temp1 from [vnxt_Reporting].[dbo].[Scorecard] Q with(nolock) \nINNER JOIN [vnxt_Reporting].[dbo].[SubsidiaryDetails] Geo with(nolock)\nON Q.Subsidiaryid = Geo.SubsidiaryId\nWHERE ISNULL(Q.RejectionCount,0) = 0\nGROUP BY Q.GRSListid, Geo.SubsidiaryName ,Q.PartnerAccountNumber\n\nSelect Distinct Q.GRSListid, Q.SubsidiaryName ,COUNT(Distinct Q.PartnerAccountNumber) AccountsNonManagedContact_1 into #Temp2 from #Temp1 Q with(nolock) \nWHERE Q.PartnerAccountNumber is not null and ManagedContact > 1\nGROUP BY Q.GRSListid, Q.SubsidiaryName\n\nUpdate P\nSet P.AccountsNonManagedContact_1 = Tem.AccountsNonManagedContact_1\nfrom vnxt_reporting..TempReport P with(nolock)\nINNER JOIN #Temp2 Tem with(nolock)\nON Tem.GRSlistid = P.Grslistid and Tem.Subsidiaryname = P.SubsidiaryName\n--WHERE p.grslistid in (3,4,6,7,8,9,11,12,19,10,26)\nWHERE p.grslistid IN (3,4,8,10,11,26,38)\n\nDROP TABLE #Temp1\nDROP TABLE #Temp2\n\nSelect Distinct Q.GRSListid, Geo.SubsidiaryName ,Q.PartnerAccountNumber,SUM(Case WHEN ISNULL(Q.ManagedContact,0) = 0 THEN 1 ELSE 0 END) AS ManagedContact into #Temp3 from [vnxt_Reporting].[dbo].[Scorecard] Q with(nolock) \nINNER JOIN [vnxt_Reporting].[dbo].[SubsidiaryDetails] Geo with(nolock)\nON Q.Subsidiaryid = Geo.SubsidiaryId\nWHERE ISNULL(Q.RejectionCount,0) = 0\nGROUP BY Q.GRSListid, Geo.SubsidiaryName ,Q.PartnerAccountNumber\n\nSelect Distinct Q.GRSListid, Q.SubsidiaryName ,COUNT(Distinct Q.PartnerAccountNumber) AccountsNonManagedContact_2 into #Temp4 from #Temp3 Q with(nolock) \nWHERE Q.PartnerAccountNumber is not null and ManagedContact > 2\nGROUP BY Q.GRSListid, Q.SubsidiaryName\n\nUpdate P\nSet P.AccountsNonManagedContact_2 = Tem.AccountsNonManagedContact_2\nfrom vnxt_reporting..TempReport P with(nolock)\nINNER JOIN #Temp4 Tem with(nolock)\nON Tem.GRSlistid = P.Grslistid and Tem.Subsidiaryname = P.SubsidiaryName\n--WHERE p.grslistid in (3,4,6,7,8,9,11,12,19,10,26)\nWHERE p.grslistid IN (3,4,8,10,11,26,38)\n\nDROP TABLE #Temp3\nDROP TABLE #Temp4\n\nSelect Distinct Q.GRSListid, Geo.SubsidiaryName ,Q.PartnerAccountNumber,SUM(Case WHEN ISNULL(Q.ManagedContact,0) = 0 THEN 1 ELSE 0 END) AS ManagedContact into #Temp5 from [vnxt_Reporting].[dbo].[Scorecard] Q with(nolock) \nINNER JOIN [vnxt_Reporting].[dbo].[SubsidiaryDetails] Geo with(nolock)\nON Q.Subsidiaryid = Geo.SubsidiaryId\nWHERE ISNULL(Q.RejectionCount,0) = 0\nGROUP BY Q.GRSListid, Geo.SubsidiaryName ,Q.PartnerAccountNumber\n\nSelect Distinct Q.GRSListid, Q.SubsidiaryName ,COUNT(Distinct Q.PartnerAccountNumber) AccountsNonManagedContact_3 into #Temp6 from #Temp5 Q with(nolock) \nWHERE Q.PartnerAccountNumber is not null and ManagedContact > 3\nGROUP BY Q.GRSListid, Q.SubsidiaryName\n\nUpdate P\nSet P.AccountsNonManagedContact_3 = Tem.AccountsNonManagedContact_3\nfrom vnxt_reporting..TempReport P with(nolock)\nINNER JOIN #Temp6 Tem with(nolock)\nON Tem.GRSlistid = P.Grslistid and Tem.Subsidiaryname = P.SubsidiaryName\n--WHERE p.grslistid in (3,4,6,7,8,9,11,12,19,10,26)\nWHERE p.grslistid IN (3,4,8,10,11,26,38)\n\nDROP TABLE #Temp5\nDROP TABLE #Temp6\n\nselect 1 abcd"
						}
					]
				}
			},
			{
				"name": "Update Account Percentage",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Update Partner Account NonManaged",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "vnxt_reporting",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "select 1 abcd"
						}
					]
				}
			},
			{
				"name": "Update ManagedContactMLAccountCoverage",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Update Account Percentage",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "vnxt_reporting",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "Update dbo.tempreport\nSet ManagedContactMLAccountCoverage = CASE WHEN GRSBucket = 'Customer - SMSP Public Sector Corp AM' THEN Perc_AccountsManagedContact_2\nWHEN GRSBucket = 'Partner - Managed SMSP' THEN Perc_AccountsManagedContact_2\nWHEN GRSBucket = 'Partner - Regional Tele Covered' THEN Perc_AccountsManagedContact_1\nWHEN GRSBucket = 'Partner - Dynamics Managed' THEN Perc_AccountsManagedContact_2\nWHEN GRSBucket = 'Customer - SMSP Corp AM' THEN Perc_AccountsManagedContact_2\nWHEN GRSBucket = 'Customer - SMSP Corp TM' THEN Perc_AccountsManagedContact_1\nWHEN GRSBucket = 'Customer - SMSP Public Sector Corp TM' THEN Perc_AccountsManagedContact_1\nWHEN GRSBucket = 'Partner - Telemanaged Partner' THEN Perc_AccountsManagedContact_1\nELSE 0.0000 END\n\n\nselect 1 abcd"
						}
					]
				}
			}
		],
		"folder": {
			"name": "Reporting Pipeline"
		},
		"annotations": []
	}
}