{
	"name": "Vnxt_Report_Scorecard_Summary",
	"properties": {
		"activities": [
			{
				"name": "Drop Table",
				"type": "Script",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "vnxt_reporting",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "IF EXISTS(Select * from sysobjects where name = 'TempReport_Summary' and type = 'U')\nBEGIN\nEXEC dbo.CreateBackup 'dbo','TempReport_Summary'\nTruncate TABLE dbo.TempReport_Summary\nEND\n\n\n\nSelect 1 abcd"
						}
					]
				}
			},
			{
				"name": "TempReport_Summary",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Drop Table",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "dbo.Scorecard"
					},
					{
						"name": "Destination",
						"value": "dbo.TempReport_Summary"
					}
				],
				"typeProperties": {
					"source": {
						"type": "SqlMISource",
						"sqlReaderStoredProcedureName": "[dbo].[SP_TempReport_Summary]",
						"partitionOption": "None"
					},
					"sink": {
						"type": "SqlMISink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "GRSListid",
									"type": "Int16",
									"physicalType": "smallint"
								},
								"sink": {
									"name": "GRSListid",
									"type": "Int16",
									"physicalType": "smallint"
								}
							},
							{
								"source": {
									"name": "GRSBucket",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "GRSBucket",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "AreaName",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "AreaName",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "SubRegionName",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "SubRegionName",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "SubsidiaryName",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "SubsidiaryName",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "AccountManager",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "AccountManager",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "ManagedContact",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "ManagedContact",
									"type": "Boolean",
									"physicalType": "bit"
								}
							},
							{
								"source": {
									"name": "TotalCount",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "TotalCount",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "SampleCount",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "SampleCount",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "RejectionCount",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "RejectionCount",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "FixableRejectionCount",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "FixableRejectionCount",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "NonFixableRejectionCount",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "NonFixableRejectionCount",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "ManagedSampleCount",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "ManagedSampleCount",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "Accountnumber",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "Accountnumber",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "PartnerAccountNumber",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "PartnerAccountNumber",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "TotalAccountNumber",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "TotalAccountNumber",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "AccountsManagedContact_1",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "AccountsManagedContact_1",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "AccountsManagedContact_2",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "AccountsManagedContact_2",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "AccountsManagedContact_3",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "AccountsManagedContact_3",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "AccountsNonManagedContact_1",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "AccountsNonManagedContact_1",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "AccountsNonManagedContact_2",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "AccountsNonManagedContact_2",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "AccountsNonManagedContact_3",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "AccountsNonManagedContact_3",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "Perc_AccountsManagedContact_1",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 7
								},
								"sink": {
									"name": "Perc_AccountsManagedContact_1",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 7
								}
							},
							{
								"source": {
									"name": "Perc_AccountsManagedContact_2",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 7
								},
								"sink": {
									"name": "Perc_AccountsManagedContact_2",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 7
								}
							},
							{
								"source": {
									"name": "Perc_AccountsManagedContact_3",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 7
								},
								"sink": {
									"name": "Perc_AccountsManagedContact_3",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 7
								}
							},
							{
								"source": {
									"name": "Perc_AccountsNonManagedContact_1",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 7
								},
								"sink": {
									"name": "Perc_AccountsNonManagedContact_1",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 7
								}
							},
							{
								"source": {
									"name": "Perc_AccountsNonManagedContact_2",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 7
								},
								"sink": {
									"name": "Perc_AccountsNonManagedContact_2",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 7
								}
							},
							{
								"source": {
									"name": "Perc_AccountsNonManagedContact_3",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 7
								},
								"sink": {
									"name": "Perc_AccountsNonManagedContact_3",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 7
								}
							},
							{
								"source": {
									"name": "ManagedContactMLAccountCoverage",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 7
								},
								"sink": {
									"name": "ManagedContactMLAccountCoverage",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 7
								}
							},
							{
								"source": {
									"name": "DataQuality",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 7
								},
								"sink": {
									"name": "DataQuality",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 7
								}
							},
							{
								"source": {
									"name": "DNCLocalSuppression",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "DNCLocalSuppression",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "DNCPriorWaveHardBounceBack",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "DNCPriorWaveHardBounceBack",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "OtherSurveySuppression",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "OtherSurveySuppression",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "DNCMDMHardSuppress",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "DNCMDMHardSuppress",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "OtherNonFixable",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "OtherNonFixable",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "GlobalCompanySuppression",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "GlobalCompanySuppression",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "DeDupeinSameBucket",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "DeDupeinSameBucket",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "OtherFixable",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "OtherFixable",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "MissingNameCompanyFirstLast",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "MissingNameCompanyFirstLast",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "InvalidMissingEmail",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "InvalidMissingEmail",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "InvalidMissingFields",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "InvalidMissingFields",
									"type": "Int32",
									"physicalType": "int"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "Source_vnxt_Reporting",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Dest_vnxt_Reporting_TempReport_Summary",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Update TempReport_Summary",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "TempReport_Summary",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "vnxt_reporting",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "Update dbo.TempReport_Summary\nSet GRSBucket = 'Customer - SMB MPAA'\nWhere GRSBucket = 'Customer -  SMB MPAA ITP'\n\n\nUpdate dbo.TempReport_Summary\nSet GRSBucket = 'Customer - SMB MPAA'\nWhere GRSBucket = 'Customer -  SMB MPAA BDM'"
						}
					]
				}
			},
			{
				"name": "Update Total Account Number",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Update TempReport_Summary",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "vnxt_reporting",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "UPDATE s\nset TotalAccountNumber = t.AccountNumber\nFROM dbo.TempReport_Summary s\nINNER JOIN [dbo].[MPL_AccountNumber] t with(nolock)\nON t.subsidiary = s.subsidiaryName and t.grslistid = s.grslistid\n\n\nUPDATE s\nset TotalAccountNumber = t.AccountNumber\nFROM dbo.TempReport_Summary s\nINNER JOIN [dbo].[MAL_AccountNumber] t with(nolock)\nON t.subsidiary = s.subsidiaryName and t.grslistid = s.grslistid\n\nselect 1 abcd"
						}
					]
				}
			},
			{
				"name": "Update Customer Account Managed",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Update Total Account Number",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "vnxt_reporting",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "Select Distinct Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.AccountNumber, SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) AS ManagedContact into #Temp1 from [vnxt_Reporting].[dbo].[Scorecard] Q with(nolock) \nINNER JOIN [vnxt_Catalogues].[dbo].[vw_Mst_Geography] Geo with(nolock)\nON Q.Subsidiaryid = Geo.SubsidiaryId\nWHERE ISNULL(Q.RejectionCount,0) = 0\nGROUP BY Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.AccountNumber Having SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) > 1 \n\nSelect Distinct Q.GRSListid, Q.SubsidiaryName, Q.AccountManager, COUNT(Distinct Q.AccountNumber) AccountsManagedContact_1 into #Temp2 from #Temp1 Q with(nolock) \nWHERE Q.AccountNumber is not null\nGROUP BY Q.GRSListid, Q.SubsidiaryName, Q.AccountManager\n\nUpdate P\nSet P.AccountsManagedContact_1 = Tem.AccountsManagedContact_1\nfrom vnxt_reporting..TempReport_Summary P with(nolock)\nINNER JOIN #Temp2 Tem with(nolock)\nON Tem.GRSlistid = P.Grslistid and Tem.Subsidiaryname = P.SubsidiaryName and Tem.AccountManager = P.AccountManager\n\nDROP TABLE #Temp1\nDROP TABLE #Temp2\n\n\n\nSelect Distinct Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.AccountNumber, SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) AS ManagedContact into #Temp3 from [vnxt_Reporting].[dbo].[Scorecard] Q with(nolock) \nINNER JOIN [vnxt_Catalogues].[dbo].[vw_Mst_Geography] Geo with(nolock)\nON Q.Subsidiaryid = Geo.SubsidiaryId\nWHERE ISNULL(Q.RejectionCount,0) = 0\nGROUP BY Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.AccountNumber Having SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) > 2 \n\nSelect Distinct Q.GRSListid, Q.SubsidiaryName, Q.AccountManager, COUNT(Distinct Q.AccountNumber) AccountsManagedContact_2 into #Temp4 from #Temp3 Q with(nolock) \nWHERE Q.AccountNumber is not null\nGROUP BY Q.GRSListid, Q.SubsidiaryName, Q.AccountManager\n\nUpdate P\nSet P.AccountsManagedContact_2 = Tem.AccountsManagedContact_2\nfrom vnxt_reporting..TempReport_Summary P with(nolock)\nINNER JOIN #Temp4 Tem with(nolock)\nON Tem.GRSlistid = P.Grslistid and Tem.Subsidiaryname = P.SubsidiaryName and Tem.AccountManager = P.AccountManager\n\nDROP TABLE #Temp3\nDROP TABLE #Temp4\n\n\n\nSelect Distinct Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.AccountNumber, SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) AS ManagedContact into #Temp5 from [vnxt_Reporting].[dbo].[Scorecard] Q with(nolock) \nINNER JOIN [vnxt_Catalogues].[dbo].[vw_Mst_Geography] Geo with(nolock)\nON Q.Subsidiaryid = Geo.SubsidiaryId\nWHERE ISNULL(Q.RejectionCount,0) = 0\nGROUP BY Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.AccountNumber Having SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) > 3\n\nSelect Distinct Q.GRSListid, Q.SubsidiaryName, Q.AccountManager, COUNT(Distinct Q.AccountNumber) AccountsManagedContact_3 into #Temp6 from #Temp5 Q with(nolock) \nWHERE Q.AccountNumber is not null\nGROUP BY Q.GRSListid, Q.SubsidiaryName, Q.AccountManager\n\nUpdate P\nSet P.AccountsManagedContact_3 = Tem.AccountsManagedContact_3\nfrom vnxt_reporting..TempReport_Summary P with(nolock)\nINNER JOIN #Temp6 Tem with(nolock)\nON Tem.GRSlistid = P.Grslistid and Tem.Subsidiaryname = P.SubsidiaryName and Tem.AccountManager = P.AccountManager\n\nDROP TABLE #Temp5\nDROP TABLE #Temp6\n\nselect 1 abcd"
						}
					]
				}
			},
			{
				"name": "Update Customer Account NonManaged",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Update Customer Account Managed",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "vnxt_reporting",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "Select Distinct Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.AccountNumber, SUM(Case WHEN ISNULL(Q.ManagedContact,0) = 0 THEN 1 ELSE 0 END) AS ManagedContact into #Temp1 from [vnxt_Reporting].[dbo].[Scorecard] Q with(nolock) \nINNER JOIN [vnxt_Catalogues].[dbo].[vw_Mst_Geography] Geo with(nolock)\nON Q.Subsidiaryid = Geo.SubsidiaryId\nWHERE ISNULL(Q.RejectionCount,0) = 0\nGROUP BY Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.AccountNumber Having SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) > 1 \n\nSelect Distinct Q.GRSListid, Q.SubsidiaryName, Q.AccountManager, COUNT(Distinct Q.AccountNumber) AccountsNonManagedContact_1 into #Temp2 from #Temp1 Q with(nolock) \nWHERE Q.AccountNumber is not null\nGROUP BY Q.GRSListid, Q.SubsidiaryName, Q.AccountManager\n\nUpdate P\nSet P.AccountsNonManagedContact_1 = Tem.AccountsNonManagedContact_1\nfrom vnxt_reporting..TempReport_Summary P with(nolock)\nINNER JOIN #Temp2 Tem with(nolock)\nON Tem.GRSlistid = P.Grslistid and Tem.Subsidiaryname = P.SubsidiaryName and Tem.AccountManager = P.AccountManager\n\nDROP TABLE #Temp1\nDROP TABLE #Temp2\n\n\nSelect Distinct Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.AccountNumber, SUM(Case WHEN ISNULL(Q.ManagedContact,0) = 0 THEN 1 ELSE 0 END) AS ManagedContact into #Temp3 from [vnxt_Reporting].[dbo].[Scorecard] Q with(nolock) \nINNER JOIN [vnxt_Catalogues].[dbo].[vw_Mst_Geography] Geo with(nolock)\nON Q.Subsidiaryid = Geo.SubsidiaryId\nWHERE ISNULL(Q.RejectionCount,0) = 0\nGROUP BY Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.AccountNumber Having SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) > 2\n\nSelect Distinct Q.GRSListid, Q.SubsidiaryName, Q.AccountManager, COUNT(Distinct Q.AccountNumber) AccountsNonManagedContact_2 into #Temp4 from #Temp3 Q with(nolock) \nWHERE Q.AccountNumber is not null\nGROUP BY Q.GRSListid, Q.SubsidiaryName, Q.AccountManager\n\nUpdate P\nSet P.AccountsNonManagedContact_2 = Tem.AccountsNonManagedContact_2\nfrom vnxt_reporting..TempReport_Summary P with(nolock)\nINNER JOIN #Temp4 Tem with(nolock)\nON Tem.GRSlistid = P.Grslistid and Tem.Subsidiaryname = P.SubsidiaryName and Tem.AccountManager = P.AccountManager\n\nDROP TABLE #Temp3\nDROP TABLE #Temp4\n\n\n\nSelect Distinct Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.AccountNumber, SUM(Case WHEN ISNULL(Q.ManagedContact,0) = 0 THEN 1 ELSE 0 END) AS ManagedContact into #Temp5 from [vnxt_Reporting].[dbo].[Scorecard] Q with(nolock) \nINNER JOIN [vnxt_Catalogues].[dbo].[vw_Mst_Geography] Geo with(nolock)\nON Q.Subsidiaryid = Geo.SubsidiaryId\nWHERE ISNULL(Q.RejectionCount,0) = 0\nGROUP BY Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.AccountNumber Having SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) > 3\n\nSelect Distinct Q.GRSListid, Q.SubsidiaryName, Q.AccountManager, COUNT(Distinct Q.AccountNumber) AccountsNonManagedContact_3 into #Temp6 from #Temp5 Q with(nolock) \nWHERE Q.AccountNumber is not null\nGROUP BY Q.GRSListid, Q.SubsidiaryName, Q.AccountManager\n\nUpdate P\nSet P.AccountsNonManagedContact_3 = Tem.AccountsNonManagedContact_3\nfrom vnxt_reporting..TempReport_Summary P with(nolock)\nINNER JOIN #Temp6 Tem with(nolock)\nON Tem.GRSlistid = P.Grslistid and Tem.Subsidiaryname = P.SubsidiaryName and Tem.AccountManager = P.AccountManager\n\nDROP TABLE #Temp5\nDROP TABLE #Temp6\n\nselect 1 abcd"
						}
					]
				}
			},
			{
				"name": "Update Partner Account Managed",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Update Customer Account NonManaged",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "vnxt_reporting",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "Select Distinct Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.PartnerAccountNumber,SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) AS ManagedContact into #Temp1 from [vnxt_Reporting].[dbo].[Scorecard] Q with(nolock) \nINNER JOIN [vnxt_Catalogues].[dbo].[vw_Mst_Geography] Geo with(nolock)\nON Q.Subsidiaryid = Geo.SubsidiaryId\nWHERE ISNULL(Q.RejectionCount,0) = 0\nGROUP BY Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.PartnerAccountNumber Having SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) > 1 \n\nSelect Distinct Q.GRSListid, Q.SubsidiaryName, Q.AccountManager, COUNT(Distinct Q.PartnerAccountNumber) AccountsManagedContact_1 into #Temp2 from #Temp1 Q with(nolock) \nWHERE Q.PartnerAccountNumber is not null\nGROUP BY Q.GRSListid, Q.SubsidiaryName, Q.AccountManager\n\nUpdate P\nSet P.AccountsManagedContact_1 = Tem.AccountsManagedContact_1\nfrom vnxt_reporting..TempReport_Summary P with(nolock)\nINNER JOIN #Temp2 Tem with(nolock)\nON Tem.GRSlistid = P.Grslistid and Tem.Subsidiaryname = P.SubsidiaryName and Tem.AccountManager = P.AccountManager\n--WHERE p.grslistid in (3,4,6,7,8,9,11,12,19,10,26)\nWHERE p.grslistid in (3,4,8,10,11,26,38)\n\nDROP TABLE #Temp1\nDROP TABLE #Temp2\n\n\nSelect Distinct Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.PartnerAccountNumber,SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) AS ManagedContact into #Temp3 from [vnxt_Reporting].[dbo].[Scorecard] Q with(nolock) \nINNER JOIN [vnxt_Catalogues].[dbo].[vw_Mst_Geography] Geo with(nolock)\nON Q.Subsidiaryid = Geo.SubsidiaryId\nWHERE ISNULL(Q.RejectionCount,0) = 0\nGROUP BY Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.PartnerAccountNumber Having SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) > 2 \n\nSelect Distinct Q.GRSListid, Q.SubsidiaryName, Q.AccountManager, COUNT(Distinct Q.PartnerAccountNumber) AccountsManagedContact_2 into #Temp4 from #Temp3 Q with(nolock) \nWHERE Q.PartnerAccountNumber is not null\nGROUP BY Q.GRSListid, Q.SubsidiaryName, Q.AccountManager\n\nUpdate P\nSet P.AccountsManagedContact_2 = Tem.AccountsManagedContact_2\nfrom vnxt_reporting..TempReport_Summary P with(nolock)\nINNER JOIN #Temp4 Tem with(nolock)\nON Tem.GRSlistid = P.Grslistid and Tem.Subsidiaryname = P.SubsidiaryName and Tem.AccountManager = P.AccountManager\n--WHERE p.grslistid in (3,4,6,7,8,9,11,12,19,10,26)\nWHERE p.grslistid in (3,4,8,10,11,26,38)\n\nDROP TABLE #Temp3\nDROP TABLE #Temp4\n\n\nSelect Distinct Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.PartnerAccountNumber,SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) AS ManagedContact into #Temp5 from [vnxt_Reporting].[dbo].[Scorecard] Q with(nolock) \nINNER JOIN [vnxt_Catalogues].[dbo].[vw_Mst_Geography] Geo with(nolock)\nON Q.Subsidiaryid = Geo.SubsidiaryId\nWHERE ISNULL(Q.RejectionCount,0) = 0\nGROUP BY Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.PartnerAccountNumber Having SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) > 3 \n\nSelect Distinct Q.GRSListid, Q.SubsidiaryName, Q.AccountManager, COUNT(Distinct Q.PartnerAccountNumber) AccountsManagedContact_3 into #Temp6 from #Temp5 Q with(nolock) \nWHERE Q.PartnerAccountNumber is not null\nGROUP BY Q.GRSListid, Q.SubsidiaryName, Q.AccountManager\n\nUpdate P\nSet P.AccountsManagedContact_3 = Tem.AccountsManagedContact_3\nfrom vnxt_reporting..TempReport_Summary P with(nolock)\nINNER JOIN #Temp6 Tem with(nolock)\nON Tem.GRSlistid = P.Grslistid and Tem.Subsidiaryname = P.SubsidiaryName and Tem.AccountManager = P.AccountManager\n--WHERE p.grslistid in (3,4,6,7,8,9,11,12,19,10,26)\nWHERE p.grslistid in (3,4,8,10,11,26,38)\n\nDROP TABLE #Temp5\nDROP TABLE #Temp6\n\nselect 1 abcd"
						}
					]
				}
			},
			{
				"name": "Update Partner Account NonManaged",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Update Partner Account Managed",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "vnxt_reporting",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "Select Distinct Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.PartnerAccountNumber,SUM(Case WHEN ISNULL(Q.ManagedContact,0) = 0 THEN 1 ELSE 0 END) AS ManagedContact into #Temp1 from [vnxt_Reporting].[dbo].[Scorecard] Q with(nolock) \nINNER JOIN [vnxt_Catalogues].[dbo].[vw_Mst_Geography] Geo with(nolock)\nON Q.Subsidiaryid = Geo.SubsidiaryId\nWHERE ISNULL(Q.RejectionCount,0) = 0\nGROUP BY Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.PartnerAccountNumber Having SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) > 1 \n\nSelect Distinct Q.GRSListid, Q.SubsidiaryName, Q.AccountManager, COUNT(Distinct Q.PartnerAccountNumber) AccountsNonManagedContact_1 into #Temp2 from #Temp1 Q with(nolock) \nWHERE Q.PartnerAccountNumber is not null\nGROUP BY Q.GRSListid, Q.SubsidiaryName, Q.AccountManager\n\nUpdate P\nSet P.AccountsNonManagedContact_1 = Tem.AccountsNonManagedContact_1\nfrom vnxt_reporting..TempReport_Summary P with(nolock)\nINNER JOIN #Temp2 Tem with(nolock)\nON Tem.GRSlistid = P.Grslistid and Tem.Subsidiaryname = P.SubsidiaryName and Tem.AccountManager = P.AccountManager \nWHERE p.grslistid in (3,4,6,7,8,9,11,12,19,10,26)\n\nDROP TABLE #Temp1\nDROP TABLE #Temp2\n\n\nSelect Distinct Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.PartnerAccountNumber,SUM(Case WHEN ISNULL(Q.ManagedContact,0) = 0 THEN 1 ELSE 0 END) AS ManagedContact into #Temp3 from [vnxt_Reporting].[dbo].[Scorecard] Q with(nolock) \nINNER JOIN [vnxt_Catalogues].[dbo].[vw_Mst_Geography] Geo with(nolock)\nON Q.Subsidiaryid = Geo.SubsidiaryId\nWHERE ISNULL(Q.RejectionCount,0) = 0\nGROUP BY Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.PartnerAccountNumber Having SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) > 2\n\nSelect Distinct Q.GRSListid, Q.SubsidiaryName, Q.AccountManager, COUNT(Distinct Q.PartnerAccountNumber) AccountsNonManagedContact_2 into #Temp4 from #Temp3 Q with(nolock) \nWHERE Q.PartnerAccountNumber is not null\nGROUP BY Q.GRSListid, Q.SubsidiaryName, Q.AccountManager\n\nUpdate P\nSet P.AccountsNonManagedContact_2 = Tem.AccountsNonManagedContact_2\nfrom vnxt_reporting..TempReport_Summary P with(nolock)\nINNER JOIN #Temp4 Tem with(nolock)\nON Tem.GRSlistid = P.Grslistid and Tem.Subsidiaryname = P.SubsidiaryName and Tem.AccountManager = P.AccountManager\nWHERE p.grslistid in (3,4,6,7,8,9,11,12,19,10,26)\n\nDROP TABLE #Temp3\nDROP TABLE #Temp4\n\n\nSelect Distinct Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.PartnerAccountNumber,SUM(Case WHEN ISNULL(Q.ManagedContact,0) = 0 THEN 1 ELSE 0 END) AS ManagedContact into #Temp5 from [vnxt_Reporting].[dbo].[Scorecard] Q with(nolock) \nINNER JOIN [vnxt_Catalogues].[dbo].[vw_Mst_Geography] Geo with(nolock)\nON Q.Subsidiaryid = Geo.SubsidiaryId\nWHERE ISNULL(Q.RejectionCount,0) = 0\nGROUP BY Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.PartnerAccountNumber Having SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) > 3\n\nSelect Distinct Q.GRSListid, Q.SubsidiaryName, Q.AccountManager, COUNT(Distinct Q.PartnerAccountNumber) AccountsNonManagedContact_3 into #Temp6 from #Temp5 Q with(nolock) \nWHERE Q.PartnerAccountNumber is not null\nGROUP BY Q.GRSListid, Q.SubsidiaryName, Q.AccountManager\n\nUpdate P\nSet P.AccountsNonManagedContact_3 = Tem.AccountsNonManagedContact_3\nfrom vnxt_reporting..TempReport_Summary P with(nolock)\nINNER JOIN #Temp6 Tem with(nolock)\nON Tem.GRSlistid = P.Grslistid and Tem.Subsidiaryname = P.SubsidiaryName and Tem.AccountManager = P.AccountManager \nWHERE p.grslistid in (3,4,6,7,8,9,11,12,19,10,26)\n\nDROP TABLE #Temp5\nDROP TABLE #Temp6\n\nselect 1 abcd"
						}
					]
				}
			},
			{
				"name": "Update Account Percentage",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Update Partner Account NonManaged",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "vnxt_reporting",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "--Customer--------------------------------\n\nUpdate dbo.TempReport_Summary\nSet Perc_AccountsManagedContact_1 = CAST((CAST(AccountsManagedContact_1 AS numeric(8,2))/CAST(NULLIF(AccountNumber,0) AS numeric(8,2))) AS numeric(7,4))\nWHERE AccountsManagedContact_1 <> 0 and AccountsManagedContact_1 is not null and grslistid not in (3,4,8,10,11,26,38)--(3,4,6,7,8,9,11,12,19,10,26)\n\n\nUpdate dbo.TempReport_Summary\nSet Perc_AccountsManagedContact_2 = CAST((CAST(AccountsManagedContact_2 AS numeric(8,2))/CAST(NULLIF(AccountNumber,0) AS numeric(8,2))) AS numeric(7,4))\nWHERE AccountsManagedContact_2 <> 0 and AccountsManagedContact_2 is not null and grslistid not in (3,4,8,10,11,26,38)--(3,4,6,7,8,9,11,12,19,10,26)\n\n\nUpdate dbo.TempReport_Summary\nSet Perc_AccountsManagedContact_3 = CAST((CAST(AccountsManagedContact_3 AS numeric(8,2))/CAST(NULLIF(AccountNumber,0) AS numeric(8,2))) AS numeric(7,4))\nWHERE AccountsManagedContact_3 <> 0 and AccountsManagedContact_3 is not null and grslistid not in (3,4,8,10,11,26,38)--(3,4,6,7,8,9,11,12,19,10,26)\n\n\nUpdate dbo.TempReport_Summary\nSet Perc_AccountsNonManagedContact_1 = CAST((CAST(AccountsNonManagedContact_1 AS numeric(8,2))/CAST(NULLIF(AccountNumber,0) AS numeric(8,2))) AS numeric(7,4))\nWHERE AccountsNonManagedContact_1 <> 0 and AccountsNonManagedContact_1 is not null and grslistid not in (3,4,8,10,11,26,38)--(3,4,6,7,8,9,11,12,19,10,26)\n\n\nUpdate dbo.TempReport_Summary\nSet Perc_AccountsNonManagedContact_2 = CAST((CAST(AccountsNonManagedContact_2 AS numeric(8,2))/CAST(NULLIF(AccountNumber,0) AS numeric(8,2))) AS numeric(7,4))\nWHERE AccountsNonManagedContact_2 <> 0 and AccountsNonManagedContact_2 is not null and grslistid not in (3,4,8,10,11,26,38)--(3,4,6,7,8,9,11,12,19,10,26)\n\n\nUpdate dbo.TempReport_Summary\nSet Perc_AccountsNonManagedContact_3 = CAST((CAST(AccountsNonManagedContact_3 AS numeric(8,2))/CAST(NULLIF(AccountNumber,0) AS numeric(8,2))) as numeric(7,4))\nWHERE AccountsNonManagedContact_3 <> 0 and AccountsNonManagedContact_3 is not null and grslistid not in (3,4,8,10,11,26,38)--(3,4,6,7,8,9,11,12,19,10,26)\n\n\n--Partner--------------------------------\n\nUpdate dbo.TempReport_Summary\nSet Perc_AccountsManagedContact_1 = CAST((CAST(AccountsManagedContact_1 AS numeric(8,2))/CAST(PartnerAccountNumber AS numeric(8,2))) AS numeric(7,4))\nWHERE AccountsManagedContact_1 <> 0 and AccountsManagedContact_1 is not null and grslistid in (3,4,8,10,11,26,38)--(3,4,6,7,8,9,11,12,19,10,26) \nand PartnerAccountNumber <> 0 and PartnerAccountNumber is not null\n\n\nUpdate dbo.TempReport_Summary\nSet Perc_AccountsManagedContact_2 = CAST((CAST(AccountsManagedContact_2 AS numeric(8,2))/CAST(PartnerAccountNumber AS numeric(8,2))) AS numeric(7,4))\nWHERE AccountsManagedContact_2 <> 0 and AccountsManagedContact_2 is not null and grslistid in (3,4,8,10,11,26,38)--(3,4,6,7,8,9,11,12,19,10,26) \nand PartnerAccountNumber <> 0 and PartnerAccountNumber is not null\n\n\nUpdate dbo.TempReport_Summary\nSet Perc_AccountsManagedContact_3 = CAST((CAST(AccountsManagedContact_3 AS numeric(8,2))/CAST(PartnerAccountNumber AS numeric(8,2))) AS numeric(7,4))\nWHERE AccountsManagedContact_3 <> 0 and AccountsManagedContact_3 is not null and grslistid in (3,4,8,10,11,26,38)--(3,4,6,7,8,9,11,12,19,10,26) \nand PartnerAccountNumber <> 0 and PartnerAccountNumber is not null\n\n\nUpdate dbo.TempReport_Summary\nSet Perc_AccountsNonManagedContact_1 = CAST((CAST(AccountsNonManagedContact_1 AS numeric(8,2))/CAST(PartnerAccountNumber AS numeric(8,2))) AS numeric(7,4))\nWHERE AccountsNonManagedContact_1 <> 0 and AccountsNonManagedContact_1 is not null and grslistid in (3,4,8,10,11,26,38)--(3,4,6,7,8,9,11,12,19,10,26) \nand PartnerAccountNumber <> 0 and PartnerAccountNumber is not null\n\n\nUpdate dbo.TempReport_Summary\nSet Perc_AccountsNonManagedContact_2 = CAST((CAST(AccountsNonManagedContact_2 AS numeric(8,2))/CAST(PartnerAccountNumber AS numeric(8,2))) AS numeric(7,4))\nWHERE AccountsNonManagedContact_2 <> 0 and AccountsNonManagedContact_2 is not null and grslistid in (3,4,8,10,11,26,38)--(3,4,6,7,8,9,11,12,19,10,26) \nand PartnerAccountNumber <> 0 and PartnerAccountNumber is not null\n\n\nUpdate dbo.TempReport_Summary\nSet Perc_AccountsNonManagedContact_3 = CAST((CAST(AccountsNonManagedContact_3 AS numeric(8,2))/CAST(PartnerAccountNumber AS numeric(8,2))) AS numeric(7,4))\nWHERE AccountsNonManagedContact_3 <> 0 and AccountsNonManagedContact_3 is not null and grslistid in (3,4,8,10,11,26,38)--(3,4,6,7,8,9,11,12,19,10,26) \nand PartnerAccountNumber <> 0 and PartnerAccountNumber is not null\n\n\nUpdate dbo.TempReport_Summary\nSet AccountNumber = PartnerAccountNumber\nWhere grslistid in (3,4,8,10,11,26,38)--(3,4,6,7,8,9,11,12,19,10,26)\n\n\nselect 1 abcd"
						}
					]
				}
			},
			{
				"name": "Update ManagedContactMLAccountCoverage",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Update Account Percentage",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "vnxt_reporting",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "Update [vnxt_Reporting].[dbo].[TempReport_Summary]\nSet Perc_AccountsManagedContact_1 = NULL,\nPerc_AccountsManagedContact_2 = NULL,\nPerc_AccountsManagedContact_3 = NULL\nWHERE ManagedContact = 0\n\n\nUpdate [vnxt_Reporting].[dbo].[TempReport_Summary]\nSet Perc_AccountsNonManagedContact_1 = NULL,\nPerc_AccountsNonManagedContact_2 = NULL,\nPerc_AccountsNonManagedContact_3 = NULL\nWHERE ManagedContact = 1\n\n\nUpdate dbo.TempReport_Summary\nSet ManagedContactMLAccountCoverage = CASE WHEN GRSBucket = 'Customer - SMSP Public Sector Corp AM' THEN Perc_AccountsManagedContact_2\nWHEN GRSBucket = 'Partner - Managed SMSP' THEN Perc_AccountsManagedContact_2\nWHEN GRSBucket = 'Partner - Regional Tele Covered' THEN Perc_AccountsManagedContact_1\nWHEN GRSBucket = 'Partner - Dynamics Managed' THEN Perc_AccountsManagedContact_2\nWHEN GRSBucket = 'Customer - SMSP Corp AM' THEN Perc_AccountsManagedContact_2\nWHEN GRSBucket = 'Customer - SMSP Corp TM' THEN Perc_AccountsManagedContact_1\nWHEN GRSBucket = 'Customer - SMSP Public Sector Corp TM' THEN Perc_AccountsManagedContact_1\nWHEN GRSBucket = 'Partner - Telemanaged Partner' THEN Perc_AccountsManagedContact_1\nELSE 0.0000 END\nWHERE ManagedContact = 1\n\n\nUpdate dbo.TempReport_Summary\nSet ManagedContactMLAccountCoverage = CASE WHEN GRSBucket = 'Customer - SMSP Public Sector Corp AM' THEN Perc_AccountsNonManagedContact_2\nWHEN GRSBucket = 'Partner - Managed SMSP' THEN Perc_AccountsNonManagedContact_2\nWHEN GRSBucket = 'Partner - Regional Tele Covered' THEN Perc_AccountsNonManagedContact_1\nWHEN GRSBucket = 'Partner - Dynamics Managed' THEN Perc_AccountsNonManagedContact_2\nWHEN GRSBucket = 'Customer - SMSP Corp AM' THEN Perc_AccountsNonManagedContact_2\nWHEN GRSBucket = 'Customer - SMSP Corp TM' THEN Perc_AccountsNonManagedContact_1\nWHEN GRSBucket = 'Customer - SMSP Public Sector Corp TM' THEN Perc_AccountsNonManagedContact_1\nWHEN GRSBucket = 'Partner - Telemanaged Partner' THEN Perc_AccountsNonManagedContact_1\nELSE 0.0000 END\nWHERE ManagedContact = 0\n\n\nselect 1 abcd"
						}
					]
				}
			},
			{
				"name": "Update Data Quality",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Update ManagedContactMLAccountCoverage",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "vnxt_reporting",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "--DataQuality\n\nUpdate dbo.TempReport_Summary\nSet DataQuality = CAST((CAST(SampleCount AS numeric(10,2)))/(CAST(FixableRejectionCount AS numeric(10,2))+CAST(SampleCount AS numeric(10,2))) AS numeric(7,4))\nWHERE (ISNULL(FixableRejectionCount,0)+ISNULL(SampleCount,0)) > 0\n\n\nselect 1 abcd"
						}
					]
				}
			},
			{
				"name": "Truncate TempReport_Summary_MLD",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Update Data Quality",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "vnxt_reporting",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "IF EXISTS(Select * from sysobjects where name = 'TempReport_Summary_MLD' and type = 'U')\nBEGIN\nEXEC dbo.CreateBackup 'dbo','TempReport_Summary_MLD'\ntruncate TABLE dbo.TempReport_Summary_MLD\nEND\n\n\nselect 1 abcd\n"
						}
					]
				}
			},
			{
				"name": "RefressTempReport_Summary_MLD",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Truncate TempReport_Summary_MLD",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "dbo.Scorecard"
					},
					{
						"name": "Destination",
						"value": "dbo.TempReport_Summary_MLD"
					}
				],
				"typeProperties": {
					"source": {
						"type": "SqlMISource",
						"sqlReaderStoredProcedureName": "[dbo].[SP_TempReport_Summary_MLD]",
						"partitionOption": "None"
					},
					"sink": {
						"type": "SqlMISink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "GRSListid",
									"type": "Int16",
									"physicalType": "smallint"
								},
								"sink": {
									"name": "GRSListid",
									"type": "Int16",
									"physicalType": "smallint"
								}
							},
							{
								"source": {
									"name": "GRSBucket",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "GRSBucket",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "AreaName",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "AreaName",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "SubRegionName",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "SubRegionName",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "SubsidiaryName",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "SubsidiaryName",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "AccountManager",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "AccountManager",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "MSSalesTopParentID",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "MSSalesTopParentID",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "ParentAccountId",
									"type": "Guid",
									"physicalType": "uniqueidentifier"
								},
								"sink": {
									"name": "ParentAccountId",
									"type": "Guid",
									"physicalType": "uniqueidentifier"
								}
							},
							{
								"source": {
									"name": "AccountId",
									"type": "Guid",
									"physicalType": "uniqueidentifier"
								},
								"sink": {
									"name": "AccountId",
									"type": "Guid",
									"physicalType": "uniqueidentifier"
								}
							},
							{
								"source": {
									"name": "CompanyName",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "CompanyName",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "ManagedSampleCount",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "ManagedSampleCount",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "NonManagedSampleCount",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "NonManagedSampleCount",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "Accountnumber",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "Accountnumber",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "PartnerAccountNumber",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "PartnerAccountNumber",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "TotalAccountNumber",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "TotalAccountNumber",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "AccountsManagedContact_1",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "AccountsManagedContact_1",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "AccountsManagedContact_2",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "AccountsManagedContact_2",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "AccountsManagedContact_3",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "AccountsManagedContact_3",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "AccountsNonManagedContact_1",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "AccountsNonManagedContact_1",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "AccountsNonManagedContact_2",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "AccountsNonManagedContact_2",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "AccountsNonManagedContact_3",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "AccountsNonManagedContact_3",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "IsAccountsManagedContact_1",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "IsAccountsManagedContact_1",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "IsAccountsManagedContact_2",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "IsAccountsManagedContact_2",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "IsAccountsManagedContact_3",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "IsAccountsManagedContact_3",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "IsAccountsNonManagedContact_1",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "IsAccountsNonManagedContact_1",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "IsAccountsNonManagedContact_2",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "IsAccountsNonManagedContact_2",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "IsAccountsNonManagedContact_3",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "IsAccountsNonManagedContact_3",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Perc_AccountsManagedContact_1",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 7
								},
								"sink": {
									"name": "Perc_AccountsManagedContact_1",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 7
								}
							},
							{
								"source": {
									"name": "Perc_AccountsManagedContact_2",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 7
								},
								"sink": {
									"name": "Perc_AccountsManagedContact_2",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 7
								}
							},
							{
								"source": {
									"name": "Perc_AccountsManagedContact_3",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 7
								},
								"sink": {
									"name": "Perc_AccountsManagedContact_3",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 7
								}
							},
							{
								"source": {
									"name": "Perc_AccountsNonManagedContact_1",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 7
								},
								"sink": {
									"name": "Perc_AccountsNonManagedContact_1",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 7
								}
							},
							{
								"source": {
									"name": "Perc_AccountsNonManagedContact_2",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 7
								},
								"sink": {
									"name": "Perc_AccountsNonManagedContact_2",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 7
								}
							},
							{
								"source": {
									"name": "Perc_AccountsNonManagedContact_3",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 7
								},
								"sink": {
									"name": "Perc_AccountsNonManagedContact_3",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 7
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "Source_vnxt_Reporting",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Dest_vnxt_TempReport_Summary_MLD",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Update Customer Account Managed_MDL",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "RefressTempReport_Summary_MLD",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "vnxt_reporting",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "Select Distinct Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.AccountNumber, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName, SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) AS ManagedContact into #Temp1 from [vnxt_Reporting].[dbo].[Scorecard] Q with(nolock) \nINNER JOIN [vnxt_Catalogues].[dbo].[vw_Mst_Geography] Geo with(nolock)\nON Q.Subsidiaryid = Geo.SubsidiaryId\nGROUP BY Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.AccountNumber, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName Having SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) > 1 \n\nSelect Distinct Q.GRSListid, Q.SubsidiaryName, Q.AccountManager, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName, COUNT(Distinct Q.AccountNumber) AccountsManagedContact_1 into #Temp2 from #Temp1 Q with(nolock) \nWHERE Q.AccountNumber is not null\nGROUP BY Q.GRSListid, Q.SubsidiaryName, Q.AccountManager, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName\n\nUpdate P\nSet P.AccountsManagedContact_1 = Tem.AccountsManagedContact_1\nfrom vnxt_reporting..TempReport_Summary_MLD P with(nolock)\nINNER JOIN #Temp2 Tem with(nolock)\nON Tem.GRSlistid = P.Grslistid and Tem.Subsidiaryname = P.SubsidiaryName and Tem.AccountManager = P.AccountManager and Tem.MSSalesTopParentID = P.MSSalesTopParentID and Tem.ParentAccountId = P.ParentAccountId and Tem.AccountId = P.AccountId and Tem.CompanyName = P.CompanyName\n\nDROP TABLE #Temp1\nDROP TABLE #Temp2\n\n\n\nSelect Distinct Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.AccountNumber, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName, SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) AS ManagedContact into #Temp3 from [vnxt_Reporting].[dbo].[Scorecard] Q with(nolock) \nINNER JOIN [vnxt_Catalogues].[dbo].[vw_Mst_Geography] Geo with(nolock)\nON Q.Subsidiaryid = Geo.SubsidiaryId\nGROUP BY Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.AccountNumber, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName Having SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) > 2 \n\nSelect Distinct Q.GRSListid, Q.SubsidiaryName, Q.AccountManager, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName, COUNT(Distinct Q.AccountNumber) AccountsManagedContact_2 into #Temp4 from #Temp3 Q with(nolock) \nWHERE Q.AccountNumber is not null\nGROUP BY Q.GRSListid, Q.SubsidiaryName, Q.AccountManager, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName\n\nUpdate P\nSet P.AccountsManagedContact_2 = Tem.AccountsManagedContact_2\nfrom vnxt_reporting..TempReport_Summary_MLD P with(nolock)\nINNER JOIN #Temp4 Tem with(nolock)\nON Tem.GRSlistid = P.Grslistid and Tem.Subsidiaryname = P.SubsidiaryName and Tem.AccountManager = P.AccountManager and Tem.MSSalesTopParentID = P.MSSalesTopParentID and Tem.ParentAccountId = P.ParentAccountId and Tem.AccountId = P.AccountId and Tem.CompanyName = P.CompanyName\n\nDROP TABLE #Temp3\nDROP TABLE #Temp4\n\n\n\nSelect Distinct Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.AccountNumber, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName, SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) AS ManagedContact into #Temp51 from [vnxt_Reporting].[dbo].[Scorecard] Q with(nolock) \nINNER JOIN [vnxt_Catalogues].[dbo].[vw_Mst_Geography] Geo with(nolock)\nON Q.Subsidiaryid = Geo.SubsidiaryId\nGROUP BY Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.AccountNumber, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName Having SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) > 3\n\nSelect Distinct Q.GRSListid, Q.SubsidiaryName, Q.AccountManager, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName, COUNT(Distinct Q.AccountNumber) AccountsManagedContact_3 into #Temp6 from #Temp51 Q with(nolock) \nWHERE Q.AccountNumber is not null\nGROUP BY Q.GRSListid, Q.SubsidiaryName, Q.AccountManager, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName\n\nUpdate P\nSet P.AccountsManagedContact_3 = Tem.AccountsManagedContact_3\nfrom vnxt_reporting..TempReport_Summary_MLD P with(nolock)\nINNER JOIN #Temp6 Tem with(nolock)\nON Tem.GRSlistid = P.Grslistid and Tem.Subsidiaryname = P.SubsidiaryName and Tem.AccountManager = P.AccountManager and Tem.MSSalesTopParentID = P.MSSalesTopParentID and Tem.ParentAccountId = P.ParentAccountId and Tem.AccountId = P.AccountId and Tem.CompanyName = P.CompanyName\n\nDROP TABLE #Temp51\nDROP TABLE #Temp6\n\nselect 1 abcd"
						}
					]
				}
			},
			{
				"name": "Update Customer Account NonManaged_MDL",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Update Customer Account Managed_MDL",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "vnxt_reporting",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "Select Distinct Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.AccountNumber, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName, SUM(Case WHEN ISNULL(Q.ManagedContact,0) = 0 THEN 1 ELSE 0 END) AS ManagedContact into #Temp1 from [vnxt_Reporting].[dbo].[Scorecard] Q with(nolock) \nINNER JOIN [vnxt_Catalogues].[dbo].[vw_Mst_Geography] Geo with(nolock)\nON Q.Subsidiaryid = Geo.SubsidiaryId\nGROUP BY Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.AccountNumber, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName Having SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) > 1 \n\nSelect Distinct Q.GRSListid, Q.SubsidiaryName, Q.AccountManager, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName, COUNT(Distinct Q.AccountNumber) AccountsNonManagedContact_1 into #Temp2 from #Temp1 Q with(nolock) \nWHERE Q.AccountNumber is not null\nGROUP BY Q.GRSListid, Q.SubsidiaryName, Q.AccountManager, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName\n\nUpdate P\nSet P.AccountsNonManagedContact_1 = Tem.AccountsNonManagedContact_1\nfrom vnxt_reporting..TempReport_Summary_MLD P with(nolock)\nINNER JOIN #Temp2 Tem with(nolock)\nON Tem.GRSlistid = P.Grslistid and Tem.Subsidiaryname = P.SubsidiaryName and Tem.AccountManager = P.AccountManager and Tem.MSSalesTopParentID = P.MSSalesTopParentID and Tem.ParentAccountId = P.ParentAccountId and Tem.AccountId = P.AccountId and Tem.CompanyName = P.CompanyName\n\nDROP TABLE #Temp1\nDROP TABLE #Temp2\n\n\n\nSelect Distinct Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.AccountNumber, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName, SUM(Case WHEN ISNULL(Q.ManagedContact,0) = 0 THEN 1 ELSE 0 END) AS ManagedContact into #Temp3 from [vnxt_Reporting].[dbo].[Scorecard] Q with(nolock) \nINNER JOIN [vnxt_Catalogues].[dbo].[vw_Mst_Geography] Geo with(nolock)\nON Q.Subsidiaryid = Geo.SubsidiaryId\nGROUP BY Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.AccountNumber, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName Having SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) > 2\n\nSelect Distinct Q.GRSListid, Q.SubsidiaryName, Q.AccountManager, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName, COUNT(Distinct Q.AccountNumber) AccountsNonManagedContact_2 into #Temp4 from #Temp3 Q with(nolock) \nWHERE Q.AccountNumber is not null\nGROUP BY Q.GRSListid, Q.SubsidiaryName, Q.AccountManager, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName\n\nUpdate P\nSet P.AccountsNonManagedContact_2 = Tem.AccountsNonManagedContact_2\nfrom vnxt_reporting..TempReport_Summary_MLD P with(nolock)\nINNER JOIN #Temp4 Tem with(nolock)\nON Tem.GRSlistid = P.Grslistid and Tem.Subsidiaryname = P.SubsidiaryName and Tem.AccountManager = P.AccountManager and Tem.MSSalesTopParentID = P.MSSalesTopParentID and Tem.ParentAccountId = P.ParentAccountId and Tem.AccountId = P.AccountId and Tem.CompanyName = P.CompanyName\n\nDROP TABLE #Temp3\nDROP TABLE #Temp4\n\n\nSelect Distinct Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.AccountNumber, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName, SUM(Case WHEN ISNULL(Q.ManagedContact,0) = 0 THEN 1 ELSE 0 END) AS ManagedContact into #Temp5 from [vnxt_Reporting].[dbo].[Scorecard] Q with(nolock) \nINNER JOIN [vnxt_Catalogues].[dbo].[vw_Mst_Geography] Geo with(nolock)\nON Q.Subsidiaryid = Geo.SubsidiaryId\nGROUP BY Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.AccountNumber, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName Having SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) > 3\n\nSelect Distinct Q.GRSListid, Q.SubsidiaryName, Q.AccountManager, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName, COUNT(Distinct Q.AccountNumber) AccountsNonManagedContact_3 into #Temp6 from #Temp5 Q with(nolock) \nWHERE Q.AccountNumber is not null\nGROUP BY Q.GRSListid, Q.SubsidiaryName, Q.AccountManager, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName\n\nUpdate P\nSet P.AccountsNonManagedContact_3 = Tem.AccountsNonManagedContact_3\nfrom vnxt_reporting..TempReport_Summary_MLD P with(nolock)\nINNER JOIN #Temp6 Tem with(nolock)\nON Tem.GRSlistid = P.Grslistid and Tem.Subsidiaryname = P.SubsidiaryName and Tem.AccountManager = P.AccountManager and Tem.MSSalesTopParentID = P.MSSalesTopParentID and Tem.ParentAccountId = P.ParentAccountId and Tem.AccountId = P.AccountId and Tem.CompanyName = P.CompanyName\n\nDROP TABLE #Temp5\nDROP TABLE #Temp6\n\nselect 1 abcd"
						}
					]
				}
			},
			{
				"name": "Update Partner Account Managed_MDL",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Update Customer Account NonManaged_MDL",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "vnxt_reporting",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "Select Distinct Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.PartnerAccountNumber, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName, SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) AS ManagedContact into #Temp1 from [vnxt_Reporting].[dbo].[Scorecard] Q with(nolock) \nINNER JOIN [vnxt_Catalogues].[dbo].[vw_Mst_Geography] Geo with(nolock)\nON Q.Subsidiaryid = Geo.SubsidiaryId\nGROUP BY Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.PartnerAccountNumber, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName Having SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) > 1 \n\nSelect Distinct Q.GRSListid, Q.SubsidiaryName, Q.AccountManager, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName, COUNT(Distinct Q.PartnerAccountNumber) AccountsManagedContact_1 into #Temp2 from #Temp1 Q with(nolock) \nWHERE Q.PartnerAccountNumber is not null\nGROUP BY Q.GRSListid, Q.SubsidiaryName, Q.AccountManager, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName\n\nUpdate P\nSet P.AccountsManagedContact_1 = Tem.AccountsManagedContact_1\nfrom vnxt_reporting..TempReport_Summary_MLD P with(nolock)\nINNER JOIN #Temp2 Tem with(nolock)\nON Tem.GRSlistid = P.Grslistid and Tem.Subsidiaryname = P.SubsidiaryName and Tem.AccountManager = P.AccountManager and Tem.MSSalesTopParentID = P.MSSalesTopParentID and Tem.ParentAccountId = P.ParentAccountId and Tem.AccountId = P.AccountId and Tem.CompanyName = P.CompanyName\n--WHERE p.grslistid in (3,4,6,7,8,9,11,12,19,10,26)\nWHERE p.grslistid in (3,4,8,10,11,26,38)\n\nDROP TABLE #Temp1\nDROP TABLE #Temp2\n\n\n\nSelect Distinct Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.PartnerAccountNumber, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName, SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) AS ManagedContact into #Temp3 from [vnxt_Reporting].[dbo].[Scorecard] Q with(nolock) \nINNER JOIN [vnxt_Catalogues].[dbo].[vw_Mst_Geography] Geo with(nolock)\nON Q.Subsidiaryid = Geo.SubsidiaryId\nGROUP BY Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.PartnerAccountNumber, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName Having SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) > 2 \n\nSelect Distinct Q.GRSListid, Q.SubsidiaryName, Q.AccountManager, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName, COUNT(Distinct Q.PartnerAccountNumber) AccountsManagedContact_2 into #Temp4 from #Temp3 Q with(nolock) \nWHERE Q.PartnerAccountNumber is not null\nGROUP BY Q.GRSListid, Q.SubsidiaryName, Q.AccountManager, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName\n\nUpdate P\nSet P.AccountsManagedContact_2 = Tem.AccountsManagedContact_2\nfrom vnxt_reporting..TempReport_Summary_MLD P with(nolock)\nINNER JOIN #Temp4 Tem with(nolock)\nON Tem.GRSlistid = P.Grslistid and Tem.Subsidiaryname = P.SubsidiaryName and Tem.AccountManager = P.AccountManager and Tem.MSSalesTopParentID = P.MSSalesTopParentID and Tem.ParentAccountId = P.ParentAccountId and Tem.AccountId = P.AccountId and Tem.CompanyName = P.CompanyName\n--WHERE p.grslistid in (3,4,6,7,8,9,11,12,19,10,26)\nWHERE p.grslistid in (3,4,8,10,11,26,38)\n\nDROP TABLE #Temp3\nDROP TABLE #Temp4\n\n\n\nSelect Distinct Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.PartnerAccountNumber, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName, SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) AS ManagedContact into #Temp5 from [vnxt_Reporting].[dbo].[Scorecard] Q with(nolock) \nINNER JOIN [vnxt_Catalogues].[dbo].[vw_Mst_Geography] Geo with(nolock)\nON Q.Subsidiaryid = Geo.SubsidiaryId\nGROUP BY Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.PartnerAccountNumber, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName Having SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) > 3 \n\nSelect Distinct Q.GRSListid, Q.SubsidiaryName, Q.AccountManager, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName, COUNT(Distinct Q.PartnerAccountNumber) AccountsManagedContact_3 into #Temp6 from #Temp5 Q with(nolock) \nWHERE Q.PartnerAccountNumber is not null\nGROUP BY Q.GRSListid, Q.SubsidiaryName, Q.AccountManager, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName\n\nUpdate P\nSet P.AccountsManagedContact_3 = Tem.AccountsManagedContact_3\nfrom vnxt_reporting..TempReport_Summary_MLD P with(nolock)\nINNER JOIN #Temp6 Tem with(nolock)\nON Tem.GRSlistid = P.Grslistid and Tem.Subsidiaryname = P.SubsidiaryName and Tem.AccountManager = P.AccountManager and Tem.MSSalesTopParentID = P.MSSalesTopParentID and Tem.ParentAccountId = P.ParentAccountId and Tem.AccountId = P.AccountId and Tem.CompanyName = P.CompanyName\n--WHERE p.grslistid in (3,4,6,7,8,9,11,12,19,10,26)\nWHERE p.grslistid in (3,4,8,10,11,26,38)\n\n\nDROP TABLE #Temp5\nDROP TABLE #Temp6\n\nselect 1 abcd"
						}
					]
				}
			},
			{
				"name": "Update Partner Account NonManaged_mdl",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Update Partner Account Managed_MDL",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "vnxt_reporting",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "Select Distinct Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.PartnerAccountNumber, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName, SUM(Case WHEN ISNULL(Q.ManagedContact,0) = 0 THEN 1 ELSE 0 END) AS ManagedContact into #Temp1 from [vnxt_Reporting].[dbo].[Scorecard] Q with(nolock) \nINNER JOIN [vnxt_Catalogues].[dbo].[vw_Mst_Geography] Geo with(nolock)\nON Q.Subsidiaryid = Geo.SubsidiaryId\nGROUP BY Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.PartnerAccountNumber, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName Having SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) > 1 \n\nSelect Distinct Q.GRSListid, Q.SubsidiaryName, Q.AccountManager, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName, COUNT(Distinct Q.PartnerAccountNumber) AccountsNonManagedContact_1 into #Temp2 from #Temp1 Q with(nolock) \nWHERE Q.PartnerAccountNumber is not null\nGROUP BY Q.GRSListid, Q.SubsidiaryName, Q.AccountManager, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName\n\nUpdate P\nSet P.AccountsNonManagedContact_1 = Tem.AccountsNonManagedContact_1\nfrom vnxt_reporting..TempReport_Summary_MLD P with(nolock)\nINNER JOIN #Temp2 Tem with(nolock)\nON Tem.GRSlistid = P.Grslistid and Tem.Subsidiaryname = P.SubsidiaryName and Tem.AccountManager = P.AccountManager  and Tem.MSSalesTopParentID = P.MSSalesTopParentID and Tem.ParentAccountId = P.ParentAccountId and Tem.AccountId = P.AccountId and Tem.CompanyName = P.CompanyName\n--WHERE p.grslistid in (3,4,6,7,8,9,11,12,19,10,26)\nWHERE p.grslistid in (3,4,8,10,11,26,38)\n\nDROP TABLE #Temp1\nDROP TABLE #Temp2\n\n\n\nSelect Distinct Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.PartnerAccountNumber, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName, SUM(Case WHEN ISNULL(Q.ManagedContact,0) = 0 THEN 1 ELSE 0 END) AS ManagedContact into #Temp3 from [vnxt_Reporting].[dbo].[Scorecard] Q with(nolock) \nINNER JOIN [vnxt_Catalogues].[dbo].[vw_Mst_Geography] Geo with(nolock)\nON Q.Subsidiaryid = Geo.SubsidiaryId\nGROUP BY Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.PartnerAccountNumber, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName Having SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) > 2\n\nSelect Distinct Q.GRSListid, Q.SubsidiaryName, Q.AccountManager, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName, COUNT(Distinct Q.PartnerAccountNumber) AccountsNonManagedContact_2 into #Temp4 from #Temp3 Q with(nolock) \nWHERE Q.PartnerAccountNumber is not null\nGROUP BY Q.GRSListid, Q.SubsidiaryName, Q.AccountManager, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName\n\nUpdate P\nSet P.AccountsNonManagedContact_2 = Tem.AccountsNonManagedContact_2\nfrom vnxt_reporting..TempReport_Summary_MLD P with(nolock)\nINNER JOIN #Temp4 Tem with(nolock)\nON Tem.GRSlistid = P.Grslistid and Tem.Subsidiaryname = P.SubsidiaryName and Tem.AccountManager = P.AccountManager and Tem.MSSalesTopParentID = P.MSSalesTopParentID and Tem.ParentAccountId = P.ParentAccountId and Tem.AccountId = P.AccountId and Tem.CompanyName = P.CompanyName\n--WHERE p.grslistid in (3,4,6,7,8,9,11,12,19,10,26)\nWHERE p.grslistid in (3,4,8,10,11,26,38)\n\nDROP TABLE #Temp3\nDROP TABLE #Temp4\n\n\n\nSelect Distinct Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.PartnerAccountNumber, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName, SUM(Case WHEN ISNULL(Q.ManagedContact,0) = 0 THEN 1 ELSE 0 END) AS ManagedContact into #Temp5 from [vnxt_Reporting].[dbo].[Scorecard] Q with(nolock) \nINNER JOIN [vnxt_Catalogues].[dbo].[vw_Mst_Geography] Geo with(nolock)\nON Q.Subsidiaryid = Geo.SubsidiaryId\nGROUP BY Q.GRSListid, Geo.SubsidiaryName, Q.AccountManager, Q.PartnerAccountNumber, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName Having SUM(Case WHEN Q.ManagedContact = 1 THEN 1 ELSE 0 END) > 3\n\nSelect Distinct Q.GRSListid, Q.SubsidiaryName, Q.AccountManager, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName, COUNT(Distinct Q.PartnerAccountNumber) AccountsNonManagedContact_3 into #Temp6 from #Temp5 Q with(nolock) \nWHERE Q.PartnerAccountNumber is not null\nGROUP BY Q.GRSListid, Q.SubsidiaryName, Q.AccountManager, Q.MSSalesTopParentID, Q.ParentAccountId, Q.AccountId, Q.CompanyName\n\nUpdate P\nSet P.AccountsNonManagedContact_3 = Tem.AccountsNonManagedContact_3\nfrom vnxt_reporting..TempReport_Summary_MLD P with(nolock)\nINNER JOIN #Temp6 Tem with(nolock)\nON Tem.GRSlistid = P.Grslistid and Tem.Subsidiaryname = P.SubsidiaryName and Tem.AccountManager = P.AccountManager  and Tem.MSSalesTopParentID = P.MSSalesTopParentID and Tem.ParentAccountId = P.ParentAccountId and Tem.AccountId = P.AccountId and Tem.CompanyName = P.CompanyName\n--WHERE p.grslistid in (3,4,6,7,8,9,11,12,19,10,26)\nWHERE p.grslistid in (3,4,8,10,11,26,38)\n\nDROP TABLE #Temp5\nDROP TABLE #Temp6\n\n\nselect 1 abcd"
						}
					]
				}
			},
			{
				"name": "Update Account Percentage_MPL",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Update Partner Account NonManaged_mdl",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "vnxt_reporting",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "--Customer--------------------------------\n\nUpdate dbo.TempReport_Summary_MLD\nSet Perc_AccountsManagedContact_1 = CAST((CAST(AccountsManagedContact_1 AS numeric(8,2))/CAST(AccountNumber AS numeric(8,2))) AS numeric(7,4))\nWHERE AccountsManagedContact_1 <> 0 and AccountsManagedContact_1 is not null and grslistid not in (3,4,8,10,11,26,38)--(3,4,6,7,8,9,11,12,19,10,26)\n\n\nUpdate dbo.TempReport_Summary_MLD\nSet Perc_AccountsManagedContact_2 = CAST((CAST(AccountsManagedContact_2 AS numeric(8,2))/CAST(AccountNumber AS numeric(8,2))) AS numeric(7,4))\nWHERE AccountsManagedContact_2 <> 0 and AccountsManagedContact_2 is not null and grslistid not in (3,4,8,10,11,26,38)--(3,4,6,7,8,9,11,12,19,10,26)\n\n\nUpdate dbo.TempReport_Summary_MLD\nSet Perc_AccountsManagedContact_3 = CAST((CAST(AccountsManagedContact_3 AS numeric(8,2))/CAST(AccountNumber AS numeric(8,2))) AS numeric(7,4))\nWHERE AccountsManagedContact_3 <> 0 and AccountsManagedContact_3 is not null and grslistid not in (3,4,8,10,11,26,38)--(3,4,6,7,8,9,11,12,19,10,26)\n\n\nUpdate dbo.TempReport_Summary_MLD\nSet Perc_AccountsNonManagedContact_1 = CAST((CAST(AccountsNonManagedContact_1 AS numeric(8,2))/CAST(AccountNumber AS numeric(8,2))) AS numeric(7,4))\nWHERE AccountsNonManagedContact_1 <> 0 and AccountsNonManagedContact_1 is not null and grslistid not in (3,4,8,10,11,26,38)--(3,4,6,7,8,9,11,12,19,10,26)\n\n\nUpdate dbo.TempReport_Summary_MLD\nSet Perc_AccountsNonManagedContact_2 = CAST((CAST(AccountsNonManagedContact_2 AS numeric(8,2))/CAST(AccountNumber AS numeric(8,2))) AS numeric(7,4))\nWHERE AccountsNonManagedContact_2 <> 0 and AccountsNonManagedContact_2 is not null and grslistid not in (3,4,8,10,11,26,38)--(3,4,6,7,8,9,11,12,19,10,26)\n\n\nUpdate dbo.TempReport_Summary_MLD\nSet Perc_AccountsNonManagedContact_3 = CAST((CAST(AccountsNonManagedContact_3 AS numeric(8,2))/CAST(AccountNumber AS numeric(8,2))) as numeric(7,4))\nWHERE AccountsNonManagedContact_3 <> 0 and AccountsNonManagedContact_3 is not null and grslistid not in (3,4,8,10,11,26,38)--(3,4,6,7,8,9,11,12,19,10,26)\n\n\n--Partner--------------------------------\n\nUpdate dbo.TempReport_Summary_MLD\nSet Perc_AccountsManagedContact_1 = CAST((CAST(AccountsManagedContact_1 AS numeric(8,2))/CAST(PartnerAccountNumber AS numeric(8,2))) AS numeric(7,4))\nWHERE AccountsManagedContact_1 <> 0 and AccountsManagedContact_1 is not null and grslistid in (3,4,8,10,11,26,38)--(3,4,6,7,8,9,11,12,19,10,26) \nand PartnerAccountNumber <> 0 and PartnerAccountNumber is not null\n\n\nUpdate dbo.TempReport_Summary_MLD\nSet Perc_AccountsManagedContact_2 = CAST((CAST(AccountsManagedContact_2 AS numeric(8,2))/CAST(PartnerAccountNumber AS numeric(8,2))) AS numeric(7,4))\nWHERE AccountsManagedContact_2 <> 0 and AccountsManagedContact_2 is not null and grslistid in (3,4,8,10,11,26,38)--(3,4,6,7,8,9,11,12,19,10,26) \nand PartnerAccountNumber <> 0 and PartnerAccountNumber is not null\n\n\nUpdate dbo.TempReport_Summary_MLD\nSet Perc_AccountsManagedContact_3 = CAST((CAST(AccountsManagedContact_3 AS numeric(8,2))/CAST(PartnerAccountNumber AS numeric(8,2))) AS numeric(7,4))\nWHERE AccountsManagedContact_3 <> 0 and AccountsManagedContact_3 is not null and grslistid in (3,4,8,10,11,26,38)--(3,4,6,7,8,9,11,12,19,10,26) \nand PartnerAccountNumber <> 0 and PartnerAccountNumber is not null\n\n\nUpdate dbo.TempReport_Summary_MLD\nSet Perc_AccountsNonManagedContact_1 = CAST((CAST(AccountsNonManagedContact_1 AS numeric(8,2))/CAST(PartnerAccountNumber AS numeric(8,2))) AS numeric(7,4))\nWHERE AccountsNonManagedContact_1 <> 0 and AccountsNonManagedContact_1 is not null and grslistid in (3,4,8,10,11,26,38)--(3,4,6,7,8,9,11,12,19,10,26) \nand PartnerAccountNumber <> 0 and PartnerAccountNumber is not null\n\n\nUpdate dbo.TempReport_Summary_MLD\nSet Perc_AccountsNonManagedContact_2 = CAST((CAST(AccountsNonManagedContact_2 AS numeric(8,2))/CAST(PartnerAccountNumber AS numeric(8,2))) AS numeric(7,4))\nWHERE AccountsNonManagedContact_2 <> 0 and AccountsNonManagedContact_2 is not null and grslistid in (3,4,8,10,11,26,38)--(3,4,6,7,8,9,11,12,19,10,26) \nand PartnerAccountNumber <> 0 and PartnerAccountNumber is not null\n\n\nUpdate dbo.TempReport_Summary_MLD\nSet Perc_AccountsNonManagedContact_3 = CAST((CAST(AccountsNonManagedContact_3 AS numeric(8,2))/CAST(PartnerAccountNumber AS numeric(8,2))) AS numeric(7,4))\nWHERE AccountsNonManagedContact_3 <> 0 and AccountsNonManagedContact_3 is not null and grslistid in (3,4,8,10,11,26,38)--(3,4,6,7,8,9,11,12,19,10,26) \nand PartnerAccountNumber <> 0 and PartnerAccountNumber is not null\n\n\nUpdate dbo.TempReport_Summary_MLD\nSet IsAccountsManagedContact_1 = 'Y'\nWhere ManagedSampleCount > 1\n\nUpdate dbo.TempReport_Summary_MLD\nSet IsAccountsManagedContact_2 = 'Y'\nWhere ManagedSampleCount > 2\n\nUpdate dbo.TempReport_Summary_MLD\nSet IsAccountsManagedContact_3 = 'Y'\nWhere ManagedSampleCount > 3\n\nUpdate dbo.TempReport_Summary_MLD\nSet IsAccountsNonManagedContact_1 = 'Y'\nWhere NonManagedSampleCount > 1\n\nUpdate dbo.TempReport_Summary_MLD\nSet IsAccountsNonManagedContact_2 = 'Y'\nWhere NonManagedSampleCount > 2\n\nUpdate dbo.TempReport_Summary_MLD\nSet IsAccountsNonManagedContact_3 = 'Y'\nWhere NonManagedSampleCount > 3\n\nselect 1 abcd"
						}
					]
				}
			}
		],
		"folder": {
			"name": "Reporting Pipeline"
		},
		"annotations": []
	}
}